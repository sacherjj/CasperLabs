# Do not support:
#   * Nested tables
#   * Arrays

# io.casperlabs.node.configuration.Configuration.Server
[server]

# Hostname or IP of this node.
# host =

# Network port to use for intra-node gRPC communication.
port = 40400

# HTTP port for utility services: /metrics, /version and /status.
http-port = 40403

# Kademlia port used for node discovery based on Kademlia algorithm.
kademlia-port = 40404

# Host IP address changes dynamically.
dynamic-host-address = false

# Use this flag to disable UpNp.
no-upnp = false

# Default timeout for roundtrip connections.
default-timeout = "5second"

# Bootstrap casperlabs node address for initial seed.
# bootstrap = "casperlabs://<keccak-hash-of-tls-public-key>@<host>?protocol=<intra-node-port>&discovery=<kademila-port>"

# Path to data directory.
data-dir = "$HOME/.casperlabs"

# Maximum number of peers allowed to connect to the node.
max-num-of-connections = 500

# Maximum size of message that can be sent via transport layer.
max-message-size = 4194304

# Size of chunks to split larger payloads into when streamed via transport layer.
chunk-size = 1048576

# Use gossiping or the old transport layer.
use-gossiping = true

# Number of new nodes to which try to gossip a new block.
relay-factor = 2

# Percentage (in between 0 and 100) of nodes required to have already seen a new block before stopping to try to gossip it to new nodes.
relay-saturation = 90

# Number of nodes to relay genesis approvals to.
approval-relay-factor = 10

# Time to wait between asking the bootstrap node for an updated list of genesis approvals.
approval-poll-interval = "30second"

# Maximum DAG depth to allow when syncing after a new block notification.
sync-max-possible-depth = 1000

# Minimum DAG size before we start checking the branching factor for abnormal growth.
sync-min-block-count-to-check-width = 100

# Maximum bonding rate per rank to allow during syncs before terminating the operation as malicious.
sync-max-bonding-rate = 1.0

# Maximum DAG depth to ask in iterative requests during syncing.
sync-max-depth-ancestors-request = 10

# Maximum number of nodes to try to sync with initially in a round.
init-sync-max-nodes = 5

# Minimum number of successful initial syncs in a round to call it done.
init-sync-min-successful = 1

# Remember the selection of nodes to synchronize with initially, or pick a new set in each round.
init-sync-memoize-nodes = false

# Skip nodes which failed previous synchronization attempts or allow them to be tried again.
init-sync-skip-failed-nodes = false

# Time to wait between initial synchronization attempts.
init-sync-round-period = "30second"

# Maximum number of blocks to allow to be synced initially.
init-sync-max-block-count = 1000000

# Maximum number of parallel block downloads initiated by the download manager.
download-max-parallel-blocks = 10

# Maximum number of times to retry to download a block from the same node.
download-max-retries = 0

# Time to wait before trying to download a failed block again from the same node.
download-retry-initial-backoff-period = "5second"

# Exponential factor to apply on subsequent wait times before trying to download again.
download-retry-backoff-factor = 2.0

# Maximum number of parallel block downloads allowed to peers.
relay-max-parallel-blocks = 5

# Maximum time to allow a peer downloading a block to consume each chunk.
relay-block-chunk-consumer-timeout = "10second"

# Use this flag to clear the blockStorage and dagStorage
clean-block-storage = false


# io.casperlabs.blockstorage.LMDBBlockStorage.Config
[lmdb]

# LMDB blockstorage  map size (in bytes).
block-storage-size = 1073741824

# LMDB blockstorage max databases.
max-dbs = 1

# LMDB blockstorage max readers.
max-readers = 126

# LMDB blockstorage use TLS.
use-tls = false


# io.casperlabs.blockstorage.FileDagStorage.Config
[blockstorage]

# Size factor for squashing block storage latest messages.
latest-messages-log-max-size-factor = 10

# Maximum size of the in-memory block cache in bytes.
cache-max-size-bytes = 262144000

# io.casperlabs.node.configuration.Configuration.GrpcServer
[grpc]

# Externally addressable hostname or IP of node on which gRPC service is running.
host = "localhost"

# Socket path used for internal gRPC API.
socket = "$HOME/.casperlabs/.casper-node.sock"

# Port used for external gRPC API, e.g. deployments.
port-external = 40401

# Port used for internal gRPC API, e.g. proposing blocks, diagnostics.
port-internal = 40402

# Whether to enable TLS encryption on the public facing gRPC interfaces (e.g. deployments).
use-tls = false

# io.casperlabs.comm.transport.Tls
[tls]

# Path to node's X.509 certificate file, that is being used for identification.
certificate = "$HOME/.casperlabs/node.certificate.pem"

# Path to node's unencrypted secp256r1 PKCS#8 private key file, that is being used for TLS communication.
key = "$HOME/.casperlabs/node.key.pem"

# Use a non blocking secure random instance.
secure-random-non-blocking = false


# io.casperlabs.casper.CasperConf
[casper]

# base-64 or PEM encoding of the public key to use for signing a proposed blocks.
# Can be inferred from the private key for some signature algorithms.
# validator-public-key =

# Path to the base-64 or PEM encoded public key to use for signing a proposed blocks.
# Can be inferred from the private key for some signature algorithms.
# validator-public-key-path =

# base-64 or PEM encoding of the private key to use for signing a proposed blocks.
# It is not recommended to use in production since private key could be revealed through the process table.
# Use the `validator-private-key-path` instead.
# validator-private-key =

# Path to the base-64 or PEM encoded private key to use for signing a proposed blocks.
# validator-private-key-path =

# Name of the algorithm to use for signing proposed blocks.
# Currently supported values: ed25519.
validator-sig-algorithm = "ed25519"

# Path to plain text file consisting of lines of the form `<pk> <stake>`
# which defines the bond amounts for each validator at genesis.
# <pk> is the public key (in base-64 encoding) identifying the validator and
# <stake> is the amount of CSPR they have bonded (an integer).
# Note: this overrides the --num-validators option.
bonds-file = "$HOME/.casperlabs/genesis/bonds.txt"

# Path to plain text file listing the public keys of validators known to the user (one per line).
# Signatures from these validators are required in order to accept a block which starts the local
# node's view of the DAG.
# known-validators-file =

# Amount of random validator keys to generate at genesis if no `bonds.txt` file is present.
num-validators = 5

# Path to plain text file consisting of lines of the form `<algorithm> <pk> <revBalance>`
# which defines the CSPR wallets that exist at genesis.
# <algorithm> is the algorithm used to verify signatures when using the wallet (currently supported value is only ed25519),
# <pk> is the public key (in base-64 encoding) identifying the wallet and
# <revBalance> is the amount of CSPR in the wallet.
wallets-file = "$HOME/.casperlabs/genesis/wallets.txt"

# Minimum bond accepted by the PoS contract in the genesis block.
minimum-bond = 1

# Maximum bond accepted by the PoS contract in the genesis block.
maximum-bond = 9223372036854775807

# Number of signatures from trusted validators required to creating an approved genesis block.
required-sigs = 0

# Path to the PEM encoded public key to use for the system account.
# genesis-account-public-key-path =

# Initial amount of motes to pass to the Mint contract.
# Note: a "mote" is the smallest, indivisible unit of a token.
initial-motes = 0

# Path to the Wasm file which contains the Mint contract.
# mint-code-path =

# Path to the Wasm file which contains the Proof-of-Stake contract
# pos-code-path =

# Identifier of the shard this node is connected to.
shard-id = "casperlabs"

# Start a stand-alone node (no bootstrapping).
standalone = false

# Start a node as a genesis validator.
approve-genesis = false

# Interval at which condition for creating ApprovedBlock will be checked.
approve-genesis-interval = "5seconds"

# Time window in which BlockApproval messages will be accumulated before checking conditions.
approve-genesis-duration = "5minutes"

# Timestamp for the deploys.
# deploy-timestamp =

# Enable auto-proposal of blocks.
auto-propose-enabled = false

# Time between proposal checks.
auto-propose-check-interval = "1second"

# Time to accumulate deploys before proposing.
auto-propose-max-interval = "5seconds"

# Number of deploys to accumulate before proposing.
auto-propose-max-count = 10

# Maximum block size in bytes
max-block-size-bytes = 10485760

# io.casperlabs.node.configuration.Configuration.Kamon
[metrics]

# Enable the Prometheus metrics reporter.
prometheus = false

# Enable the Zipkin span reporter.
zipkin = false

# Enable Sigar host system metrics.
sigar = false

# Enable Influx system metrics.
influx = false


# io.casperlabs.node.configuration.Configuration.Influx
[influx]

# Hostname or IP of the Influx instance.
# hostname = "0.0.0.0"

# Port of the Influx instance.
# port = 14

# Name of the database in Influx.
# database = "test"

# Protocol used in Influx.
# protocol = "https"

# Username for Influx database authentication.
# user = "user"

# Password for Influx database authentication.
# password = "password"
